name: Build & Release VSCode Extension

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install VSCE
        run: npm install -g @vscode/vsce

      - name: Build extension
        run: npm run compile

      - name: Package extension
        run: vsce package

      - name: Upload VSIX as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: vscode-extension
          path: "*.vsix"

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Read version from package.json
        id: pkg
        run: echo "version=$(jq -r .version package.json)" >> $GITHUB_OUTPUT

      - name: Get latest release version
        id: latest
        run: |
          latest_version=$(gh release list --limit 1 --json tagName --jq '.[0].tagName' || echo "")
          echo "latest=$latest_version" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}

      - name: Check if version changed
        run: |
          if [ "${{ steps.pkg.outputs.version }}" = "${{ steps.latest.outputs.latest }}" ]; then
            echo "Version unchanged (${steps.pkg.outputs.version}), skipping release."
            exit 0
          fi

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: vscode-extension

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: "v${{ steps.pkg.outputs.version }}"
          tag_name: "v${{ steps.pkg.outputs.version }}"
          body: "Automatic build of version v${{ steps.pkg.outputs.version }} from main branch."
          files: "*.vsix"
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
